{"ast":null,"code":"var _jsxFileName = \"E:\\\\React JS\\\\vital-aid\\\\src\\\\components\\\\Doctors.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../style/Doctors.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Doctors() {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const toggleDropdown = () => setIsOpen(!isOpen);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rout-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"doctor-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: toggleDropdown,\n            className: \"dropdown-toggle\",\n            children: \"Select an option\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 25\n          }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown-menu\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"dropdown-item\",\n              children: \"Option 1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"dropdown-item\",\n              children: \"Option 2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"dropdown-item\",\n              children: \"Option 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n}\n_s(Doctors, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c = Doctors;\nvar _c;\n$RefreshReg$(_c, \"Doctors\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Doctors","_s","isOpen","setIsOpen","toggleDropdown","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/React JS/vital-aid/src/components/Doctors.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../style/Doctors.css';\r\n\r\nexport default function Doctors() {\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const toggleDropdown = () => setIsOpen(!isOpen);\r\n\r\n\r\n    return (\r\n        <div className=\"rout-container\">\r\n            <div className=\"doctor-container\">\r\n\r\n                <div className=\"filter-container\">\r\n                    <div className=\"dropdown\">\r\n                        <button onClick={toggleDropdown} className=\"dropdown-toggle\">\r\n                            Select an option\r\n                        </button>\r\n                        {isOpen && (\r\n                            <div className=\"dropdown-menu\">\r\n                                <button className=\"dropdown-item\">Option 1</button>\r\n                                <button className=\"dropdown-item\">Option 2</button>\r\n                                <button className=\"dropdown-item\">Option 3</button>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAE9B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMO,cAAc,GAAGA,CAAA,KAAMD,SAAS,CAAC,CAACD,MAAM,CAAC;EAG/C,oBACIH,OAAA;IAAKM,SAAS,EAAC,gBAAgB;IAAAC,QAAA,eAC3BP,OAAA;MAAKM,SAAS,EAAC,kBAAkB;MAAAC,QAAA,eAE7BP,OAAA;QAAKM,SAAS,EAAC,kBAAkB;QAAAC,QAAA,eAC7BP,OAAA;UAAKM,SAAS,EAAC,UAAU;UAAAC,QAAA,gBACrBP,OAAA;YAAQQ,OAAO,EAAEH,cAAe;YAACC,SAAS,EAAC,iBAAiB;YAAAC,QAAA,EAAC;UAE7D;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EACRT,MAAM,iBACHH,OAAA;YAAKM,SAAS,EAAC,eAAe;YAAAC,QAAA,gBAC1BP,OAAA;cAAQM,SAAS,EAAC,eAAe;cAAAC,QAAA,EAAC;YAAQ;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACnDZ,OAAA;cAAQM,SAAS,EAAC,eAAe;cAAAC,QAAA,EAAC;YAAQ;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACnDZ,OAAA;cAAQM,SAAS,EAAC,eAAe;cAAAC,QAAA,EAAC;YAAQ;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClD,CACR;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACV,EAAA,CA7BuBD,OAAO;AAAAY,EAAA,GAAPZ,OAAO;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}