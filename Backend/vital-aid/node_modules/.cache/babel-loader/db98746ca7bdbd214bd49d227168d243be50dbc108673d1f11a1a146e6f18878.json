{"ast":null,"code":"var _jsxFileName = \"E:\\\\React JS\\\\vital-aid\\\\src\\\\components\\\\Ambulance.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Ambulance() {\n  _s();\n  const mapRef = useRef(null);\n  const victimLocations = [{\n    lat: 23.8103,\n    lng: 90.4125\n  },\n  // Dhaka\n  {\n    lat: 24.3636,\n    lng: 88.6241\n  } // Rajshahi\n  ];\n  const volunteerLocations = [{\n    lat: 22.3569,\n    lng: 91.7832\n  },\n  // Chittagong\n  {\n    lat: 23.2513,\n    lng: 89.5669\n  } // Khulna\n  ];\n  useEffect(() => {\n    const initMap = () => {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        const map = new window.google.maps.Map(mapRef.current, {\n          zoom: 7,\n          center: {\n            lat: latitude,\n            lng: longitude\n          }\n        });\n\n        // Add red markers for victims\n        victimLocations.forEach(location => {\n          new window.google.maps.Marker({\n            position: location,\n            map: map,\n            icon: {\n              path: window.google.maps.SymbolPath.CIRCLE,\n              fillColor: \"red\",\n              fillOpacity: 1,\n              strokeColor: \"white\",\n              strokeWeight: 2,\n              scale: 10\n            },\n            title: \"Victim Location\"\n          });\n        });\n\n        // Add green markers for volunteers\n        volunteerLocations.forEach(location => {\n          new window.google.maps.Marker({\n            position: location,\n            map: map,\n            icon: {\n              path: window.google.maps.SymbolPath.CIRCLE,\n              fillColor: \"green\",\n              fillOpacity: 1,\n              strokeColor: \"white\",\n              strokeWeight: 2,\n              scale: 10\n            },\n            title: \"Volunteer Location\"\n          });\n        });\n\n        // OpenWeatherMap Tile Overlay\n        const openWeatherMapLayer = new window.google.maps.ImageMapType({\n          getTileUrl: (coord, zoom) => `https://tile.openweathermap.org/map/precipitation_new/${zoom}/${coord.x}/${coord.y}.png?appid=5510e55cbbf0fe0a5bdb54fac87c8cd4`,\n          tileSize: new window.google.maps.Size(256, 256),\n          opacity: 0.6,\n          name: \"OpenWeatherMap Precipitation\"\n        });\n\n        // Add OpenWeatherMap tiles to the map\n        map.overlayMapTypes.insertAt(0, openWeatherMapLayer);\n      });\n    };\n    if (window.google) {\n      initMap();\n    } else {\n      const script = document.createElement(\"script\");\n      script.src = \"https://maps.gomaps.pro/maps/api/js?key=AlzaSy6A8QOu_N_UDfp3vosT8qwPTxbQ3hH2cpK\";\n      script.async = true;\n      script.onload = initMap;\n      document.head.appendChild(script);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mapRef,\n    style: {\n      height: \"100vh\",\n      width: \"100%\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(Ambulance, \"9mn7MMe4fPaZ50ApsOpRWF2HbFg=\");\n_c = Ambulance;\nvar _c;\n$RefreshReg$(_c, \"Ambulance\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Ambulance","_s","mapRef","useRef","victimLocations","lat","lng","volunteerLocations","useEffect","initMap","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","map","window","google","maps","Map","current","zoom","center","forEach","location","Marker","icon","path","SymbolPath","CIRCLE","fillColor","fillOpacity","strokeColor","strokeWeight","scale","title","openWeatherMapLayer","ImageMapType","getTileUrl","coord","x","y","tileSize","Size","opacity","name","overlayMapTypes","insertAt","script","document","createElement","src","async","onload","head","appendChild","ref","style","height","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/React JS/vital-aid/src/components/Ambulance.js"],"sourcesContent":["import React from 'react'\r\n\r\nexport default function Ambulance() {\r\n  const mapRef = useRef(null);\r\n\r\n  const victimLocations = [\r\n    { lat: 23.8103, lng: 90.4125 }, // Dhaka\r\n    { lat: 24.3636, lng: 88.6241 }  // Rajshahi\r\n  ];\r\n\r\n  const volunteerLocations = [\r\n    { lat: 22.3569, lng: 91.7832 }, // Chittagong\r\n    { lat: 23.2513, lng: 89.5669 }  // Khulna\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const initMap = () => {\r\n      navigator.geolocation.getCurrentPosition(position => {\r\n        const { latitude, longitude } = position.coords;\r\n\r\n        const map = new window.google.maps.Map(mapRef.current, {\r\n          zoom: 7,\r\n          center: { lat: latitude, lng: longitude }\r\n        });\r\n\r\n        // Add red markers for victims\r\n        victimLocations.forEach(location => {\r\n          new window.google.maps.Marker({\r\n            position: location,\r\n            map: map,\r\n            icon: {\r\n              path: window.google.maps.SymbolPath.CIRCLE,\r\n              fillColor: \"red\",\r\n              fillOpacity: 1,\r\n              strokeColor: \"white\",\r\n              strokeWeight: 2,\r\n              scale: 10\r\n            },\r\n            title: \"Victim Location\"\r\n          });\r\n        });\r\n\r\n        // Add green markers for volunteers\r\n        volunteerLocations.forEach(location => {\r\n          new window.google.maps.Marker({\r\n            position: location,\r\n            map: map,\r\n            icon: {\r\n              path: window.google.maps.SymbolPath.CIRCLE,\r\n              fillColor: \"green\",\r\n              fillOpacity: 1,\r\n              strokeColor: \"white\",\r\n              strokeWeight: 2,\r\n              scale: 10\r\n            },\r\n            title: \"Volunteer Location\"\r\n          });\r\n        });\r\n\r\n        // OpenWeatherMap Tile Overlay\r\n        const openWeatherMapLayer = new window.google.maps.ImageMapType({\r\n          getTileUrl: (coord, zoom) =>\r\n            `https://tile.openweathermap.org/map/precipitation_new/${zoom}/${coord.x}/${coord.y}.png?appid=5510e55cbbf0fe0a5bdb54fac87c8cd4`,\r\n          tileSize: new window.google.maps.Size(256, 256),\r\n          opacity: 0.6,\r\n          name: \"OpenWeatherMap Precipitation\"\r\n        });\r\n\r\n        // Add OpenWeatherMap tiles to the map\r\n        map.overlayMapTypes.insertAt(0, openWeatherMapLayer);\r\n      });\r\n    };\r\n\r\n    if (window.google) {\r\n      initMap();\r\n    } else {\r\n      const script = document.createElement(\"script\");\r\n      script.src = \"https://maps.gomaps.pro/maps/api/js?key=AlzaSy6A8QOu_N_UDfp3vosT8qwPTxbQ3hH2cpK\";\r\n      script.async = true;\r\n      script.onload = initMap;\r\n      document.head.appendChild(script);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div ref={mapRef} style={{ height: \"100vh\", width: \"100%\" }} />\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}